{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "This website contains many exercises I did in IS603 visual analytics class duting my MITB(AI) journey. I hope you enjoy reading them!",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-04-21T20:47:14+08:00"
    },
    {
      "path": "Exe1.html",
      "title": "Take Home Exercise 1",
      "description": "Take the data from VAST challenge and use the data collected from volunteers to evaluate the city's demographics.",
      "author": [
        {
          "name": "Yu Di",
          "url": {}
        }
      ],
      "contents": "\nTask Description\nThis exercise requires us to apply the skills you had learned in\nLesson 1 and Hands-on Exercise 1 to reveal the demographic of the city\nof Engagement, Ohio USA by using appropriate static statistical graphics\nmethods. The data should be processed by using appropriate tidyverse\nfamily of packages and the statistical graphics must be prepared using\nggplot2 and its extensions.\nCheck packages\n\n\npackages = c('tidyverse', 'ggplot2', 'dplyr')\n\nfor(p in packages) {\n  if(!require(p, character.only = T)) {\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\nLoad Data\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\ndata <- read_csv('data/Participants.csv')\nglimpse(data)\n\n\nRows: 1,011\nColumns: 7\n$ participantId  <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ householdSize  <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, …\n$ haveKids       <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRU…\n$ age            <dbl> 36, 25, 35, 21, 43, 32, 26, 27, 20, 35, 48, 2…\n$ educationLevel <chr> \"HighSchoolOrCollege\", \"HighSchoolOrCollege\",…\n$ interestGroup  <chr> \"H\", \"B\", \"A\", \"I\", \"H\", \"D\", \"I\", \"A\", \"G\", …\n$ joviality      <dbl> 0.001626703, 0.328086500, 0.393469590, 0.1380…\n\nGraphics with ggplot2\nNow we can dive into the age atribute:\n\n\nggplot(data=data) + aes(x=age) +\n  geom_histogram(bins=20, boundary=60, color=\"black\", fill=\"grey\") +\n  ggtitle(\"Distribution of Participants' Age\")\n\n\n\nggplot(data=data, aes(x=age, fill=haveKids)) +\n  geom_histogram(bins=20, color='gray30')\n\n\n\nggplot(data=data, aes(x=age, fill=educationLevel)) +\n  geom_histogram(bins=20, color='gray30')\n\n\n\nd <- data\nd_bg <- d[, -5]\nggplot(d, aes(x = age, fill = educationLevel)) + \n  geom_histogram(data=d_bg, fill=\"grey\", alpha=.5) +\n  geom_histogram(colour=\"black\") + \n  facet_wrap(~ educationLevel) + \n  guides(fill = FALSE) + \n  theme_bw()\n\n\n\n\nTo see more about joviality:\n\n\nggplot(data=data, aes(x = joviality, colour=haveKids)) + geom_density()\n\n\n\nggplot(data=data, aes(y = joviality, x= haveKids)) + \n  geom_violin(fill='light blue') + \n  geom_boxplot(notch=TRUE) +\n  stat_summary(geom = \"point\", fun=\"mean\", colour =\"red\", size=4)\n\n\n\nggplot(data=data, aes(x= joviality)) + geom_histogram(bins=20) + \n  facet_wrap(~ educationLevel)\n\n\n\nggplot(data=data, aes(y = joviality, x= interestGroup)) + geom_boxplot() +\n  facet_grid(educationLevel ~.)\n\n\n\ndpp <- data %>%\n  group_by(age) %>%\n  summarise(joviality = mean(joviality))\nggplot(data=dpp, aes(x=age, y=joviality)) + geom_point() +\n  coord_cartesian(xlim=c(20, 60), ylim=c(0, 1)) + \n  geom_hline(yintercept=0.5, linetype=\"dashed\", color=\"grey60\", size=1) +  \n  geom_vline(xintercept=40, linetype=\"dashed\", color=\"grey60\", size=1)\n\n\n\n\nNow, we can just find out the counts of householdSize types:\n\n\nggplot(data=data, aes(x=householdSize)) + geom_bar() + coord_flip()\n\n\n\n\n\n\n\n",
      "last_modified": "2022-04-23T16:21:45+08:00"
    },
    {
      "path": "Exe2.html",
      "title": "Take Home Exercise 2",
      "description": "Remake and beautify classmates' submissions of exercise 1",
      "author": [
        {
          "name": "Yu Di",
          "url": {}
        }
      ],
      "contents": "\nTask Description\nIn this take-home exercise, you are required to:\nselect one of the Take-home Exercise 1 prepared by your\nclassmate,\ncritic the submission in terms of clarity and aesthetics, and remake\nthe original design by using the data visualisation principles and best\npractice you had learned in Lesson.\nLoad data\n\n\npackages = c('tidyverse', 'ggdist', 'ggridges',\n             'patchwork', 'ggthemes', 'hrbrthemes',\n             'ggrepel', 'ggforce')\n\nfor(p in packages) {\n  if(!require(p, character.only = T)) {\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\nparticipants_data <- read_csv('data/Participants.csv')\n\n\n\nI choose Huang Anni’s exercise 1 to do this exercise\n2.\nCharts to Modify\nThe previous first charts is:\n\n\nparticipants_data$age_state = ifelse(\n    test = participants_data$age > 30,\n    yes = \"Old\",\n    no = \"Young\"\n)\n# Make it a factor\nparticipants_data$age_state = factor(\n    participants_data$age_state,\n    levels = c(\"Old\", \"Young\")\n)\np1 = ggplot(data=subset(participants_data,age_state=='Young'), \n       aes(x = joviality)) + \n  geom_density() +\n  ggtitle(\"Distribution of joviality for young people\")+\n  theme(plot.title = element_text(size = 10))\np2 = ggplot(data=subset(participants_data,age_state=='Old'), \n       aes(x = joviality)) + \n  geom_density() +\n  ggtitle(\"Distribution of joviality for old people\")+\n  theme(plot.title = element_text(size = 10))\np3 = ggplot(data=participants_data,\naes(x= joviality,\nfill = age_state)) +\ngeom_density(alpha=0.2) +\n  annotate(\"text\", x = 0.7, y = 1.2, label = \"Young people tend\\n to be happier\",size=3,color='#4682B4') + \n  ggtitle(\"Distribution of joviality in different Age Groups\")+\n  theme(plot.title = element_text(size = 10))\n(p1 / p2) | (p3+\n  scale_y_continuous(name=\"density\", limits=c(0.0, 1.2)))\n\n\n\n\nThe left part’s meaning is the same as the right one, both want to\ncompare the joviality of different age groups, but we need to show what\nis the meaning of old and young. Also, the titles in the left part is\nredundant, so we need to eliminate them. hence we just simplify this\ngraph\n\n\nparticipants_data$age_state = ifelse(\n    test = participants_data$age > 30,\n    yes = \"Old(age>30)\",\n    no = \"Young(age<=30)\"\n)\n# Make it a factor\nparticipants_data$age_state = factor(\n    participants_data$age_state,\n    levels = c(\"Old(age>30)\", \"Young(age<=30)\")\n)\np1 = ggplot(data=subset(participants_data,age_state=='Young(age<=30)'), \n       aes(x = joviality)) + \n  geom_density() +\n  theme(plot.title = element_text(size = 10)) \np2 = ggplot(data=subset(participants_data,age_state=='Old(age>30)'), \n       aes(x = joviality)) + \n  geom_density() +\n  theme(plot.title = element_text(size = 10))\np3 = ggplot(data=participants_data,\naes(x= joviality,\nfill = age_state)) +\ngeom_density(alpha=0.2) + coord_cartesian(ylim = c(0.3, 1.2)) +\n  ggtitle(\"Distribution of joviality with Different Age Group\") +\n  theme_ipsum(grid = \"Y\", axis_title_size = 14) + \n  theme(plot.title = element_text(size = 10), \n        axis.title.y = element_blank(), legend.position = \"top\")\n(p1 / p2) | (p3+\n  scale_y_continuous(name=\"density\", limits=c(0.0, 1.2)))\n\n\n\n\nFor the second chart\n\n\nggplot(data=participants_data,\naes(x= joviality,\nfill = haveKids)) +\ngeom_histogram(alpha=0.2) +\n  annotate(\"text\", x = 0.7, y = 20, label = \"People with kids tend\\n to be happier at the start of the study\",size=3,color='red') + \n  ggtitle(\"Distribution of joviality with and without kids\")+\n  theme(plot.title = element_text(size = 10))\n\n\n\nagg_happy <- participants_data %>% \n  select(c(\"householdSize\",\"joviality\")) %>%\n  group_by(householdSize) %>% \n  summarise(joviality=mean(joviality))\n\nhappy_sorted <- agg_happy %>%\n  arrange(desc(householdSize))\nggplot(data=happy_sorted,\naes(y = joviality,\nx= householdSize)) +\ngeom_line(linetype = \"dashed\",color='black',arrow = arrow(type = \"closed\"))+\n  geom_point(stat = \"identity\",\n             position = \"identity\")+\n  ggtitle(\"Change of average joviality when householdSize increase\")+\n  annotate(\"text\", \n           x = 2.5, \n           y = 0.495, \n           label = \"People tend \\n to be happier\\n at the start of study with\\n larger householdSize\",size=3,color='#4682B4') + \n  theme(plot.title = element_text(size = 12))\n\n\n\n\nThe expression is correct, but the color is not very fashion and it\nshould not use opacity too much; The comparison of household contains\nonly 3 groups, so it should not use line plot. Instead, barplot is a\ngood alternative. So to modify it, we change it to:\n\n\nggplot(data=participants_data,\naes(x= joviality, fill = haveKids)) +\ngeom_histogram(binwidth = 0.05, alpha=0.5) +\n  annotate(\"text\", x = 0.6, y = 57, label = \"People with kids generally tend to be happier \",size=3,color='red') + \n  ggtitle(\"Distribution of joviality partitioned by kids\")+\n  theme_ipsum(grid = \"Y\", axis_title_size = 18) + \n  theme(plot.title = element_text(size = 15), axis.title.y = element_blank(), legend.position = \"top\")\n\n\n\nagg_happy <- participants_data %>% \n  select(c(\"householdSize\",\"joviality\")) %>%\n  group_by(householdSize) %>% \n  summarise(joviality=mean(joviality))\nagg_happy$joviality <- round(agg_happy$joviality, 3)\n\nggplot(data=agg_happy, aes(x=householdSize, y=joviality)) + \n  geom_bar(stat = \"identity\", width = 0.5, fill=\"steelblue\") +\n  coord_cartesian(ylim = c(0.45, 0.51)) + \n  ggtitle(\"Average Joviality for different HouseholdSize\") +\n  scale_x_discrete(name =\"householdSize\", limits=c(\"1\",\"2\",\"3\")) +\n  geom_text(aes(label = joviality), vjust = 1.5, colour = \"white\")+\n  theme_ipsum(grid = \"Y\", axis_title_size = 18) + \n  theme(plot.title = element_text(size = 15), axis.title.y = element_blank())\n\n\n\n\nFor the third chart,\n\n\nggplot(participants_data, aes(x = joviality, y = educationLevel, fill = educationLevel)) +\n  geom_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE,\n                      quantiles = 4, \n                      quantile_lines = TRUE,\n                      alpha = .2) +\n  theme_ridges() + \n  scale_fill_viridis_d(name = \"Quartiles\")+\n  ggtitle(\"Distribution of joviality in different Education Level\")+\n  theme(plot.title = element_text(size = 12))\n\n\n\n\nthe expression is correct, but the legend takes almost half of the\nplot, which is not very reasonable. Also,we need to avoid using multiple\ncolours if the y-axis label already clearly indicate the education level\nand edit the axis label properly.. So I just simply modify it by:\n\n\nggplot(participants_data, aes(x = joviality, y = educationLevel)) +\n  geom_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE,\n                      quantiles = 4, \n                      quantile_lines = TRUE,\n                      alpha = .2) +\n  theme_ridges() + \n  scale_fill_viridis_d(name = \"Quartiles\")+\n  ggtitle(\"Distribution of joviality in different Education Level\")+\n  theme(plot.title = element_text(size = 12), legend.position = \"top\")\n\n\n\n\n\n\n\n",
      "last_modified": "2022-04-28T12:33:45+08:00"
    },
    {
      "path": "index.html",
      "title": "VA Exercises",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-04-26T20:10:41+08:00"
    }
  ],
  "collections": []
}
